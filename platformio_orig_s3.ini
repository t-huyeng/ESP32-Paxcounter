[board]
;halfile = ttgotdongles3.h
halfile = ttgotdongledisplays3.h
;halfile = ttgotdisplays3.h

[platformio]
; upload firmware to board with usb cable
default_envs = usb
description = Paxcounter is a device for metering passenger flows in realtime. It counts how many mobile devices are around.

[common]
; for release_version use max. 10 chars total, use any decimal format like "a.b.c"
release_version = 3.4.4
; DEBUG LEVEL: For production run set to 0, otherwise device will leak RAM while running!
; 0=None, 1=Error, 2=Warn, 3=Info, 4=Debug, 5=Verbose
debug_level = 3
extra_scripts = pre:build.py
otakeyfile = ota.conf
lorakeyfile = loraconf.h
lmicconfigfile = lmic_config.h
platform_espressif32 = espressif32@5.3.0
monitor_speed = 115200
upload_speed = 115200 ; set by build.py and taken from hal file
lib_deps_all =
    bitbank2/BitBang_I2C@ ^2.2.1
    bitbank2/bb_spi_lcd @ ^2.4.0
    fastled/FastLED @ ^3.5.0
    greyrook/libpax @ ^1.1.0
    https://github.com/SukkoPera/Arduino-Rokkit-Hash.git
    bblanchon/ArduinoJson @ ^6
    mathertel/OneButton @ ^2.0.3
    256dpi/MQTT @ ^2.5.0
    ricmoo/QRCode @ ^0.0.1
build_flags_basic =
    -include "src/paxcounter.conf"
    '-DCORE_DEBUG_LEVEL=${common.debug_level}'
    '-DLOG_LOCAL_LEVEL=${common.debug_level}'
    '-DPROGVERSION="${common.release_version}"'
    '-D LIBPAX_WIFI'
    '-D LIBPAX_BLE'
    '-D LIBPAX_ARDUINO'
    '-DUSE_ESP_IDF_LOG'
    '-DTAG=__FILE__'
build_flags_all =
    ${common.build_flags_basic}
    -mfix-esp32-psram-cache-issue

[env]
framework = arduino
board = esp32-s3-devkitc-1
board_build.partitions = min_spiffs.csv
build_type = release
upload_speed = ${common.upload_speed}
;upload_port = COM6
platform = ${common.platform_espressif32}
lib_deps = ${common.lib_deps_all}
build_flags =
   -include "src/hal/${board.halfile}"
   ${common.build_flags_all}
upload_protocol = ${common.upload_protocol}
extra_scripts = ${common.extra_scripts}
monitor_speed = ${common.monitor_speed}
monitor_filters = time, esp32_exception_decoder, default

[env:usb]
upload_protocol = esptool

[env:ci]
build_flags =
    -include "src/hal/${sysenv.CI_HALFILE}" ; set by CI
    ${common.build_flags_all}
upload_protocol = esptool